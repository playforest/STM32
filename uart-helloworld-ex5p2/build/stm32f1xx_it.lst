ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:stm32f1xx_it.c **** /**
   3:stm32f1xx_it.c ****   ******************************************************************************
   4:stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:stm32f1xx_it.c ****   ******************************************************************************
   7:stm32f1xx_it.c ****   * @attention
   8:stm32f1xx_it.c ****   *
   9:stm32f1xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:stm32f1xx_it.c ****   * All rights reserved.
  11:stm32f1xx_it.c ****   *
  12:stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:stm32f1xx_it.c ****   * in the root directory of this software component.
  14:stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:stm32f1xx_it.c ****   *
  16:stm32f1xx_it.c ****   ******************************************************************************
  17:stm32f1xx_it.c ****   */
  18:stm32f1xx_it.c **** /* USER CODE END Header */
  19:stm32f1xx_it.c **** 
  20:stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:stm32f1xx_it.c **** #include "main.h"
  22:stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:stm32f1xx_it.c **** /* USER CODE END Includes */
  26:stm32f1xx_it.c **** 
  27:stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:stm32f1xx_it.c **** 
  30:stm32f1xx_it.c **** /* USER CODE END TD */
  31:stm32f1xx_it.c **** 
  32:stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 2


  33:stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:stm32f1xx_it.c **** 
  35:stm32f1xx_it.c **** /* USER CODE END PD */
  36:stm32f1xx_it.c **** 
  37:stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:stm32f1xx_it.c **** 
  40:stm32f1xx_it.c **** /* USER CODE END PM */
  41:stm32f1xx_it.c **** 
  42:stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:stm32f1xx_it.c **** 
  45:stm32f1xx_it.c **** /* USER CODE END PV */
  46:stm32f1xx_it.c **** 
  47:stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:stm32f1xx_it.c **** 
  50:stm32f1xx_it.c **** /* USER CODE END PFP */
  51:stm32f1xx_it.c **** 
  52:stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:stm32f1xx_it.c **** 
  55:stm32f1xx_it.c **** /* USER CODE END 0 */
  56:stm32f1xx_it.c **** 
  57:stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:stm32f1xx_it.c **** 
  59:stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  60:stm32f1xx_it.c **** 
  61:stm32f1xx_it.c **** /* USER CODE END EV */
  62:stm32f1xx_it.c **** 
  63:stm32f1xx_it.c **** /******************************************************************************/
  64:stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  65:stm32f1xx_it.c **** /******************************************************************************/
  66:stm32f1xx_it.c **** /**
  67:stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:stm32f1xx_it.c ****   */
  69:stm32f1xx_it.c **** void NMI_Handler(void)
  70:stm32f1xx_it.c **** {
  27              		.loc 1 70 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  71:stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:stm32f1xx_it.c **** 
  73:stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:stm32f1xx_it.c ****   while (1)
  34              		.loc 1 75 3 discriminator 1 view .LVU1
  76:stm32f1xx_it.c ****   {
  77:stm32f1xx_it.c ****   }
  35              		.loc 1 77 3 discriminator 1 view .LVU2
  75:stm32f1xx_it.c ****   {
  36              		.loc 1 75 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 3


  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB66:
  78:stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:stm32f1xx_it.c **** }
  80:stm32f1xx_it.c **** 
  81:stm32f1xx_it.c **** /**
  82:stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:stm32f1xx_it.c ****   */
  84:stm32f1xx_it.c **** void HardFault_Handler(void)
  85:stm32f1xx_it.c **** {
  50              		.loc 1 85 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  86:stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:stm32f1xx_it.c **** 
  88:stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:stm32f1xx_it.c ****   while (1)
  57              		.loc 1 89 3 discriminator 1 view .LVU5
  90:stm32f1xx_it.c ****   {
  91:stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:stm32f1xx_it.c ****   }
  58              		.loc 1 93 3 discriminator 1 view .LVU6
  89:stm32f1xx_it.c ****   {
  59              		.loc 1 89 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB67:
  94:stm32f1xx_it.c **** }
  95:stm32f1xx_it.c **** 
  96:stm32f1xx_it.c **** /**
  97:stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  98:stm32f1xx_it.c ****   */
  99:stm32f1xx_it.c **** void MemManage_Handler(void)
 100:stm32f1xx_it.c **** {
  73              		.loc 1 100 1 view -0
  74              		.cfi_startproc
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 4


  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 101:stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:stm32f1xx_it.c **** 
 103:stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:stm32f1xx_it.c ****   while (1)
  80              		.loc 1 104 3 discriminator 1 view .LVU9
 105:stm32f1xx_it.c ****   {
 106:stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:stm32f1xx_it.c ****   }
  81              		.loc 1 108 3 discriminator 1 view .LVU10
 104:stm32f1xx_it.c ****   {
  82              		.loc 1 104 9 discriminator 1 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE67:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 109:stm32f1xx_it.c **** }
 110:stm32f1xx_it.c **** 
 111:stm32f1xx_it.c **** /**
 112:stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 113:stm32f1xx_it.c ****   */
 114:stm32f1xx_it.c **** void BusFault_Handler(void)
 115:stm32f1xx_it.c **** {
  96              		.loc 1 115 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 116:stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:stm32f1xx_it.c **** 
 118:stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:stm32f1xx_it.c ****   while (1)
 103              		.loc 1 119 3 discriminator 1 view .LVU13
 120:stm32f1xx_it.c ****   {
 121:stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:stm32f1xx_it.c ****   }
 104              		.loc 1 123 3 discriminator 1 view .LVU14
 119:stm32f1xx_it.c ****   {
 105              		.loc 1 119 9 discriminator 1 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE68:
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 5


 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB69:
 124:stm32f1xx_it.c **** }
 125:stm32f1xx_it.c **** 
 126:stm32f1xx_it.c **** /**
 127:stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:stm32f1xx_it.c ****   */
 129:stm32f1xx_it.c **** void UsageFault_Handler(void)
 130:stm32f1xx_it.c **** {
 119              		.loc 1 130 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 131:stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:stm32f1xx_it.c **** 
 133:stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:stm32f1xx_it.c ****   while (1)
 126              		.loc 1 134 3 discriminator 1 view .LVU17
 135:stm32f1xx_it.c ****   {
 136:stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:stm32f1xx_it.c ****   }
 127              		.loc 1 138 3 discriminator 1 view .LVU18
 134:stm32f1xx_it.c ****   {
 128              		.loc 1 134 9 discriminator 1 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB70:
 139:stm32f1xx_it.c **** }
 140:stm32f1xx_it.c **** 
 141:stm32f1xx_it.c **** /**
 142:stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:stm32f1xx_it.c ****   */
 144:stm32f1xx_it.c **** void SVC_Handler(void)
 145:stm32f1xx_it.c **** {
 142              		.loc 1 145 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 6


 146:stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:stm32f1xx_it.c **** 
 148:stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:stm32f1xx_it.c **** 
 151:stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:stm32f1xx_it.c **** }
 147              		.loc 1 152 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE70:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB71:
 153:stm32f1xx_it.c **** 
 154:stm32f1xx_it.c **** /**
 155:stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 156:stm32f1xx_it.c ****   */
 157:stm32f1xx_it.c **** void DebugMon_Handler(void)
 158:stm32f1xx_it.c **** {
 161              		.loc 1 158 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 159:stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:stm32f1xx_it.c **** 
 161:stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:stm32f1xx_it.c **** 
 164:stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:stm32f1xx_it.c **** }
 166              		.loc 1 165 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE71:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB72:
 166:stm32f1xx_it.c **** 
 167:stm32f1xx_it.c **** /**
 168:stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:stm32f1xx_it.c ****   */
 170:stm32f1xx_it.c **** void PendSV_Handler(void)
 171:stm32f1xx_it.c **** {
 180              		.loc 1 171 1 view -0
 181              		.cfi_startproc
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 7


 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 172:stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:stm32f1xx_it.c **** 
 174:stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:stm32f1xx_it.c **** 
 177:stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:stm32f1xx_it.c **** }
 185              		.loc 1 178 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE72:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB73:
 179:stm32f1xx_it.c **** 
 180:stm32f1xx_it.c **** /**
 181:stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 182:stm32f1xx_it.c ****   */
 183:stm32f1xx_it.c **** void SysTick_Handler(void)
 184:stm32f1xx_it.c **** {
 199              		.loc 1 184 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 185:stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:stm32f1xx_it.c **** 
 187:stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:stm32f1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 188 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 189:stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:stm32f1xx_it.c **** 
 191:stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:stm32f1xx_it.c **** }
 211              		.loc 1 192 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE73:
 216              		.text
 217              	.Letext0:
 218              		.file 2 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:19     .text.NMI_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:25     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:42     .text.HardFault_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:65     .text.MemManage_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:88     .text.BusFault_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:111    .text.UsageFault_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:134    .text.SVC_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:140    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:153    .text.DebugMon_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:172    .text.PendSV_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:191    .text.SysTick_Handler:00000000 $t
/var/folders/g_/_gbrp9t921v56m675w45dsjm0000gn/T//ccVUDWKf.s:197    .text.SysTick_Handler:00000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
